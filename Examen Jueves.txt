const Button= function(props){
return(
<button>{props.label}</button>
);
};


class Button extends React.Component{
  //   handleClick=()=>{
  //   	//this === component instance
  //     //this.state.counter++
  //     this.setState({counter:this.state.counter+1})
  // }
  
	render(){
		return(
    	<button onClick={this.props.onClickFunction}>+1</button>
      );
	}
}

const Result=(props)=>{
return(<div>{props.counter}</div>);
}

class App extends React.Component{
	constructor(props){
  	super(props);
    this.state={counter:0}};
    
  incrementCounter=()=>{
  this.setState((prevState)=>({counter:prevState.counter+1}));
  };
	render(){
  	return(<div>
  	  <Button onClickFunction={this.incrementCounter}/>
      <Result counter={this.state.counter}/>
  	</div>
    );
  }
}

ReactDOM.render(<App />,mountNode);




-----------------------------------------------------------------------
JQUERY

<script type="text/javascript" src="jquery.js"></script>


example code:
<html>
	<head>
		<script type="text/javascript" src="jquery.js"></script>
		<script type="text/javascript">
			$(document).ready(fucntion(){
				$('#myContent').html("changed");
			})
		</script>
	</head>
	<body>
		<div id="myContent">
		My jQuery enabled page!
		</div>
	</body>
</html>



example code 2:
$.ajax({
	url: 'ajax/test.html',
	success: function(data){
		$('.result').html(data);
		alert('Load was performed.');
	}
});